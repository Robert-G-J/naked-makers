<head>
<%= render "partials/header" %>

<script src="https://d3js.org/d3.v4.min.js"></script>
<script>
  // var locationJSONdata = {
  //   children : [
  //     { name: 'london', count: 3000 },
  //     { name: 'manchester', count: 500 },
  //     { name: 'bristol', count: 230 },
  //     { name: 'Paris', count: 100 }
  //   ]
  // }

    var locationJSONdata = {
      name: "responses",
      children: [
        {
          name: "locations",
          children: [
            {
              name: "London",
              children: [
              {name: "Ruby", count: 3938},
              {name: "Python", count: 3812},
              {name: "Javascript", count: 6714},
              {name: "PHP", count: 743}
              ]
            },
            {
              name: "Birmingham",
              children: [
                {name: "Ruby", count: 2938},
                {name: "Python", count: 1812},
                {name: "Javascript", count: 4714},
                {name: "PHP", count: 10043}
              ]
            }
          ]
        }
      ]
    }

</script>
</head>

<body>
<div class="container">
  <div class="jumbotron text-center">
    <h1>Naked Makers</h1>
    <% if flash[:notice] %>
      <div class = 'alert alert-success'><%= flash[:notice]%></div>
    <%end%>
    <div class="text-center">
      <form action = '/responses/new'>
        <input type='submit' value = 'Submit Data' class="btn btn-primary">
      </form>
    </div>
    <h2>the graph</h2>
</div>
</div>

<style>

circle {
  fill: rgb(31,199,180);
  fill-opacity: .25;
  stroke: rgb(31, 199, 180);
  stroke-width: 1px;
}

.leaf circle {
  fill: #ff7f0e;
  fill-opacity: 1;
}

text {
  font: 32px sans-serif;
  text-anchor: middle;
}
</style>

<svg width="960" height="960"></svg>

<script>
var svg = d3.select("svg")
    diameter = +svg.attr("width"),
    g = svg.append("g").attr("transform", "translate(2,2)"),
    format = d3.format(",d");

console.log(diameter);
console.log(g);
console.log(format);

var pack = d3.pack()
   .size([diameter - 4, diameter - 4]);

root = d3.hierarchy(locationJSONdata)
   .sum(function(d) { return d.count; })
   .sort(function(a, b) { return b.value - a.value; });

console.log(root);

var node = g.selectAll(".node")
  .data(pack(root).descendants())
  .enter().append("g")
    .attr("class", function(d) { return d.children ? "node" : "leaf node"; })
    .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

node.append("title")
    .text(function(d) { return d.data.name + "\n" + format(d.value); });

node.append("circle")
    .attr("r", function(d) { return d.r; });

node.filter(function(d) { return !d.children; }).append("text")
    .attr("dy", "0.3em")
    .text(function(d) { return d.data.name; });






// var locations = locationJSONdata.locations;
// var color = d3.scaleOrdinal(d3.schemeCategory20);
// var width = 400,
//     height = 300;
//
// var canvas = d3.select('body').append('svg')
//        .attr('width', width)
//        .attr('height', height)
//        .append ('g')
//            .attr('transform', 'translate(50, 50)');
//
// var pack = d3.pack(locations)
//     .size(width, height - 50)
//     .padding(10);
//
//  var nodes = d3.hierarchy(locations)
//             .sum(function(d) {return
//             d.count; });
//
// var node = canvas.selectAll(".node")
//           .data(pack(nodes).descendants())
//           .enter()
//           .filter(function(d){
//               return  !d.locations
//           })
//           .append("g")
//           .attr("class", "node")
//           .attr("transform", function(d) {
//               return "translate(" + 200 + "," + 150 + ")";
//           });
//
//   node.append('circle')
//     .attr('r', 35)
//     .style('fill', 'grey');
//
//   node.append("title")
//         .text(function(d) {
//             return d.locations.name + ": " + d.locations.count;
//            });


    //  nodes.data(locations.map(function(location) { return location.count; }), function(d) { return d; })
     //
    //   var node = canvas.selectAll('node')
    //      .data(nodes)
    //      .enter()
    //      .append('g')
    //            .attr('class', 'node')
    //            .attr('transform', 10);
    //      node.append('circle')
    //        .attr('r', 10 )
    //        .attr('fill', 'steelblue')


  // var locations = locationJSONdata.locations;
  // var svg = d3.select("svg");
  //
  // var circle = svg.selectAll("circle")
  //     .data(locations.map(function(location) {
  //       return location.count;
  //     }), function(d) { return d; })
  //     .enter().append("circle")
  //     .attr("cy", 80)
  //     .attr("cx", function(d,i) { return (i+1) * 100 + 30; })
  //     .attr("r", function(d) { return Math.sqrt(d); })
  //     .style("fill", "green")
  //
  // circle.exit().remove();
</script>
</body>
